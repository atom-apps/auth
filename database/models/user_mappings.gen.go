// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
	"gorm.io/gorm/schema"
)

const TableNameUserMapping = "user_mappings"

// UserMapping mapped from table <user_mappings>
type UserMapping struct {
	ID        int64          `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt time.Time      `gorm:"column:created_at;type:timestamp with time zone" json:"created_at"`
	UpdatedAt time.Time      `gorm:"column:updated_at;type:timestamp with time zone" json:"updated_at"`
	DeletedAt gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone" json:"deleted_at"`
	UUID      string         `gorm:"column:uuid;type:character varying(128)" json:"uuid"`
	Name      string         `gorm:"column:name;type:character varying(128)" json:"name"`
}

func (*UserMapping) TableName(namer schema.Namer) string {
	if namer == nil {
		return TableNameUserMapping
	}
	return namer.TableName(TableNameUserMapping)
}
